<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.my.test</groupId>
    <artifactId>test-soa-application</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>
  <groupId>org.my.test</groupId>
  <artifactId>test-soa-project1</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>sar</packaging>
  
   <properties>
    <!-- these parameters are used by the compile goal -->
    <scac.input.dir>${project.basedir}/SOA/</scac.input.dir>
    <scac.output.dir>${project.basedir}/target</scac.output.dir>
    <scac.input>${scac.input.dir}/composite.xml</scac.input>
    <scac.output>${scac.output.dir}/out.xml</scac.output>
    <scac.error>${scac.output.dir}/error.txt</scac.error>
    <scac.displayLevel>1</scac.displayLevel>
    <!-- if you are using a config plan, uncomment the following line and update to point 
             to your config plan -->
    <!--<configplan>${scac.input.dir}/configplan.xml</configplan>-->
    <!-- these parameters are used by the deploy and undeploy goals -->
    <composite.name>${project.artifactId}</composite.name>
    <composite.revision>${project.version}</composite.revision>
    <composite.partition>default</composite.partition>
    
    <overwrite>true</overwrite>
    <forceDefault>true</forceDefault>
    <regenerateRulebase>false</regenerateRulebase>
    <keepInstancesOnRedeploy>false</keepInstancesOnRedeploy>
    <!-- these parameters are used by the test goal -->
    <!-- if you are using the sca-test (test) goal, you need to uncomment the following
             line and point it to your jndi.properties file. -->
    <!--<jndi.properties.input>${basedir}/jndi.properties</jndi.properties.input>-->
    <scatest.result>${scac.output.dir}/testResult</scatest.result>
    <!--  input is the name of the composite to run test suties against -->
    <input>test-soa-project</input>
    <oracleHome>${env.ORACLE_HOME}</oracleHome>
  </properties>
  <build>
    <plugins>
	<plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0-alpha-2</version>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
            <configuration>
              <files>                
                <file>../../../build/properties/env.properties</file>
                     
              </files>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.oracle.soa.plugin</groupId>
        <artifactId>oracle-soa-plugin</artifactId>
        <version>12.2.1-1-0</version>
        <configuration>
          <compositeName>test-soa-project1</compositeName>
          <composite>${scac.input}</composite>
          <sarLocation>${scac.output.dir}/sca_${project.artifactId}_rev${version}.jar</sarLocation>
          <serverUrl>${oracleServerUrl}</serverUrl>		  
		<user>${oracleUsername}</user>
		<password>${oraclePassword}</password>
          <!-- note: compositeRevision is needed to package, revision is needed to undeploy -->
          <compositeRevision>${composite.revision}</compositeRevision>
          <revision>${composite.revision}</revision>
          <scacInputDir>${scac.input.dir}</scacInputDir>
          <!-- Uncomment the appHome property if your composite 
                         depends on MDS. -->
          <!--<appHome>${project.basedir}/..</appHome>-->
          <!--  If you have a composite which contains a component that 
                          depends on MDS (eg. Human Task, Business Rule) AND you 
                          want to use a file-based MDS repository, then you 
                          need to do either:
                          1. update the .adf/META-INF/adf-config.xml to point to
                             the correct location of the file based repository, i.e.
                             remove the reference to ${soa.oracle.home} in that file, or
                          2. define oracleHome and soaOracleHome here and leave the adf-config.xml file
                             as is.  Note that the correct value for soaOracleHome is the path to 
                             your SOA Quickstart or JDeveloper install directory, 
                             with "/soa" appended to it.
                    -->
          <!--<oracleHome>JDEV_HOME</oracleHome>-->
          <!--<soaOracleHome>JDEV_HOME/soa</soaOracleHome>-->
          <input>${input}</input>
        </configuration>
        <!-- extensions=true is needed to use the custom sar packaging type -->
        <extensions>true</extensions>
      </plugin>
    
    </plugins>
  </build>
  
</project>